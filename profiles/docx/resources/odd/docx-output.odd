<?xml-model href="teipublisher_odds.xsd"?>
<TEI xmlns:pb="http://teipublisher.com/1.0" xmlns="http://www.tei-c.org/ns/1.0" xml:lang="en">
    <teiHeader>
        <fileDesc>
            <titleStmt>
                <title>DOCX Output Preview   
                 
                 
                      
                 
                 
                 
                 <desc>A test ODD to preview TEI imported from Word docx</desc>
                </title>
            </titleStmt>
            <publicationStmt>
                <publisher>eXistSolutions GmbH</publisher>
                <availability>
                    <licence target="https://www.gnu.org/licenses/gpl-3.0.en.html">Distributed under GNU General Public License</licence>
                    <p>Copyright 2017 <ref target="http://existsolutions.com">eXistSolutions GmbH</ref>
                    </p>
                    <p>This program is free software: you can redistribute it and/or modify
                        it under the terms of the GNU General Public License as published by
                        the Free Software Foundation, either version 3 of the License, or
                        (at your option) any later version.</p>
                    <p>This program is distributed in the hope that it will be useful,
                        but WITHOUT ANY WARRANTY; without even the implied warranty of
                        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                        GNU General Public License for more details.</p>
                </availability>
            </publicationStmt>
            <sourceDesc>
                <p>Generated by <ref target="http://tei-publisher.com">TEI Publisher</ref>
                </p>
                <p>born digital</p>
            </sourceDesc>
        </fileDesc>
        <encodingDesc>
            <tagsDecl>
                <rendition source="docx-output.css"/>
            </tagsDecl>
        </encodingDesc>
        <revisionDesc>
            <change when="2019-09-25+02:00">Initial version</change>
        </revisionDesc>
    </teiHeader>
    <text>
        <body>
            <schemaSpec start="TEI teiCorpus" ident="docx-output" source="teipublisher.odd"> <elementSpec ident="gi" mode="add">
                    <model behaviour="inline">
            <outputRendition xml:space="preserve">
            
            
            
            
            
            
            
            
            
            
            
            
            
            font-family: Menlo, Consolas, monospace;
font-size: 0.85em;
            
            
            
            
            
            
            
            
            
            
            
            
            
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="placeName" mode="add">
                    <model predicate="@rend='smallcaps'" behaviour="link">
            <param name="uri" value="'https://www.google.de/maps/place/' || @ref"/>
            <param name="target" value="'_blank'"/>
            <outputRendition xml:space="preserve">
            
            
            
            
            
            
            
            
            
            
            
            color: #e24329;
font-variant: small-caps;
            
            
            
            
            
            
            
            
            
            
            
            </outputRendition>
        </model>
                    <model behaviour="inline">
            <outputRendition xml:space="preserve">
            color: #e24329;
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="persName" mode="add">
                    <model predicate="@ref" behaviour="link">
            <param name="uri" value="@ref"/>
            <param name="target" value="'_blank'"/>
            <outputRendition xml:space="preserve">
            color: #007e00;
            </outputRendition>
        </model>
                    <model behaviour="inline">
            <outputRendition xml:space="preserve">
            color: #007e00;
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="tag" mode="add">
                    <model behaviour="inline">
            <outputRendition xml:space="preserve">
            
            
            
            font-family: Menlo, Consolas, monospace;
font-size: .85em;
            
            
            
            </outputRendition>
            <outputRendition xml:space="preserve" scope="before">
            content: '&lt;';
            </outputRendition>
            <outputRendition xml:space="preserve" scope="after">
            content: '&gt;';
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="quote" mode="change">
                    <model predicate="ancestor::p" behaviour="inline" useSourceRendition="true">
            <desc>If it is inside a paragraph then it is inline, otherwise it is block                  level</desc>
            <outputRendition xml:space="preserve" scope="before">
            content: '‘';
            </outputRendition>
            <outputRendition xml:space="preserve" scope="after">
            content: '’';
            </outputRendition>
        </model>
                    <model behaviour="block" useSourceRendition="true">
            <desc>If it is inside a paragraph then it is inline, otherwise it is block                  level</desc>
            <outputRendition xml:space="preserve">
            
            
            
            
            
            
            
            
            
            
            
            
            
            margin-left: 10px; 
margin-right: 10px;
padding-left: 10px;
border-left: 1px solid #C0C0C0;
            
            
            
            
            
            
            
            
            
            
            
            
            
            </outputRendition>
        </model>
                </elementSpec>
            <elementSpec ident="supplied" mode="change">
                    <model behaviour="inline">
            <outputRendition xml:space="preserve">
            color: #909090;
            </outputRendition>
        </model>
                </elementSpec>
            <elementSpec ident="eg" mode="add">
                    <model behaviour="block">
            <outputRendition xml:space="preserve">
            margin-left: 1.5em;
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="hi" mode="change">
                    <model predicate="@rend" behaviour="inline">
            <param name="rend" value="@rend"/>
            <pb:template xmlns="" xml:space="preserve"><span class="[[rend]]">[[content]]</span></pb:template>
        </model>
                    <model predicate="@rendition" behaviour="inline" useSourceRendition="true">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model>
                    <model predicate="not(@rendition)" behaviour="inline">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="head" mode="change">
                    <model predicate="$parameters?header='short' or $parameters?mode='toc'" behaviour="inline">
            <param name="content" value="replace(string-join(.//text()[not(parent::ref)]), '^(.+?)[^\w]*$', '$1')"/>
        </model>
                    <model predicate="parent::figure" behaviour="block">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model>
                    <model predicate="parent::table" behaviour="block">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model>
                    <model predicate="parent::lg" behaviour="block">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model>
                    <model predicate="parent::list" behaviour="block">
            <outputRendition xml:space="preserve">
            font-weight: bold;
            </outputRendition>
        </model>
                    <model predicate="parent::div" behaviour="heading">
            <param name="level" value="count($get(.)/ancestor::div)"/>
        </model>
                    <model behaviour="block"/>
                </elementSpec>
            <elementSpec ident="anchor" mode="change">
                    <model predicate="@type='note'" behaviour="inline" cssClass="note">
            <param name="content" value="let $nr := count(./preceding::note[@target]) let $ch := codepoints-to-string(string-to-codepoints(&#34;a&#34;) + $nr mod 26) return  $ch || '-'"/>
            <pb:template xmlns="" xml:space="preserve"><a rel="footnote">[[content]]</a></pb:template>
        </model>
                    <model behaviour="anchor">
            <param name="id" value="@xml:id"/>
        </model>
                </elementSpec>
                <elementSpec ident="note" mode="change">
                    <model predicate="@target" behaviour="note">
            <param name="label" value="let $nr := count(./preceding::note[@target]) let $ch := codepoints-to-string(string-to-codepoints(&#34;a&#34;) + $nr mod 26) return  '-' || $ch"/>
        </model>
                    <model predicate="@place" behaviour="note">
            <param name="place" value="@place"/>
            <param name="label" value="@n"/>
        </model>
                    <model predicate="parent::div and not(@place)" behaviour="block">
            <outputRendition xml:space="preserve">
            
            
            margin-left: 10px;margin-right: 10px;
                  font-size:smaller;
            
            
            </outputRendition>
        </model>
                    <model predicate="not(@place)" behaviour="inline">
            <outputRendition xml:space="preserve" scope="before">
            content:" [";
            </outputRendition>
            <outputRendition xml:space="preserve" scope="after">
            content:"] ";
            </outputRendition>
            <outputRendition xml:space="preserve">
            font-size:small;
            </outputRendition>
        </model>
                </elementSpec>
            <elementSpec ident="ref" mode="change">
                    <model predicate="not(@target)" behaviour="inline"/>
                    <model predicate="not(node())" behaviour="link">
            <param name="content" value="@target"/>
            <param name="uri" value="@target"/>
        </model>
                    <model predicate="starts-with(@target, '#')" behaviour="link">
            <param name="uri" value="'?id=' || substring-after(@target, '#') || @target"/>
        </model>
                    <model behaviour="link">
            <param name="uri" value="@target"/>
        </model>
                </elementSpec>
            </schemaSpec>
        </body>
    </text>
</TEI>