{
    "openapi": "3.0.3",
    "info": {
        "version": "1.0.0",
        "title": "[[ head(($pkg?title, $label)) ]] â€“ Static API",
        "description": "This is the place to add your own path endpoints"
    },
    "servers": [
        {
            "description": "Endpoint for testing on localhost",
            "url": "/exist/apps/[[$pkg?abbrev]]"
        }
    ],
    "components": {
        "securitySchemes": {
            "basicAuth": {
                "type": "http",
                "scheme": "basic"
            },
            "cookieAuth": {
                "type": "apiKey",
                "name": "teipublisher.com.login",
                "in": "cookie"
            }
        }
    },
    "tags": [],
    "paths": {
        "/api/static/{id}/single": {
            "get": {
                "summary": "Retrieve index entry for the document given by id",
                "description": "Retrieve index entry for the document given by id",
                "tags": ["view"],
                "operationId": "idx:entry",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the resource",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "prefix",
                        "in": "query",
                        "description": "The path prefix under which documents are stored",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A single index entry for the document",
                        "content": {
                            "application/json": {
                                "schema":{
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/static/{id}/parts": {
            "get": {
                "summary": "Retrieve the index entries for the document given by id, split up per page",
                "description": "Split up the index entries into parts, i.e. in the same way as users would browse through the document page by page",
                "tags": ["view"],
                "operationId": "idx:entry-part",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the resource",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of index definitions, one for each part",
                        "content": {
                            "application/json": {
                                "schema":{
                                    "type": "array"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/actions/static": {
			"post": {
				"description": "Generate static files",
				"operationId": "sg:generate-static",
				"parameters": [],
				"responses": {
					"200": {
						"description": "OK",
                        "content": {
                            "application/json": {
                                "schema":{
                                    "type": "array"
                                }
                            }
                        }
					}
				}
			}
		}
    },
    "security": [
        {
            "cookieAuth": []
        },
        {
            "basicAuth": []
        }
    ]
}
