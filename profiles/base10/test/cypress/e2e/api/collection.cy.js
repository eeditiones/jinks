// StandardJS, should-style assertions
// API tests for Collection browsing functionality
// Generated by jinks - DO NOT EDIT manually

describe('TEI-Publisher Collection API', () => {
  beforeEach(() => {
    cy.login()
  })

  describe('List Collections', () => {
    it('retrieves list of available collections', () => {
      cy.request({
        method: 'GET',
        url: '/api/collection',
        headers: { Origin: 'http://localhost:8080' }
      }).then((response) => {
        expect(response.status).to.eq(200)
        expect(response.body).to.be.an('array')
        // Should have at least one collection
        expect(response.body.length).to.be.greaterThan(0)
      })
    })

    it('returns collection metadata', () => {
      cy.request({
        method: 'GET',
        url: '/api/collection',
        headers: { Origin: 'http://localhost:8080' }
      }).then((response) => {
        expect(response.status).to.eq(200)
        // Each collection should have a name
        if (response.body.length > 0) {
          expect(response.body[0]).to.have.property('name')
        }
      })
    })
  })

  describe('Browse Collection', () => {
    it('retrieves documents from a collection', () => {
      cy.request({
        method: 'GET',
        url: '/api/collection',
        headers: { Origin: 'http://localhost:8080' }
      }).then((collectionsResponse) => {
        if (collectionsResponse.body.length > 0) {
          const firstCollection = collectionsResponse.body[0].name
          
          cy.request({
            method: 'GET',
            url: `/api/collection/${encodeURIComponent(firstCollection)}`,
            headers: { Origin: 'http://localhost:8080' }
          }).then((response) => {
            expect(response.status).to.eq(200)
            expect(response.headers['content-type']).to.include('text/html')
          })
        }
      })
    })
  })

  describe('Collection Filtering', () => {
    it('applies filters to collection results', () => {
      cy.request({
        method: 'GET',
        url: '/api/collection',
        headers: { Origin: 'http://localhost:8080' }
      }).then((collectionsResponse) => {
        if (collectionsResponse.body.length > 0) {
          const firstCollection = collectionsResponse.body[0].name
          
          cy.request({
            method: 'GET',
            url: `/api/collection/${encodeURIComponent(firstCollection)}`,
            qs: { filter: 'test' },
            headers: { Origin: 'http://localhost:8080' }
          }).then((response) => {
            expect(response.status).to.eq(200)
          })
        }
      })
    })
  })
})

