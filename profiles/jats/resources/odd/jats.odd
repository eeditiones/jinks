<?xml-model href="teipublisher_odds.xsd"?><?teipublisher output="web print epub"?>
<TEI xmlns:pb="http://teipublisher.com/1.0" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://www.tei-c.org/ns/1.0" xml:lang="en">
    <teiHeader>
        <fileDesc>
            <titleStmt>
                <title>JATS
                    
                 
                 
                 
                  
                 
                 
                 
                 
                 
                 
                 
                 
                 <desc>Processing of JATS XML (Journal Article Tag Suite)</desc>
                </title>
            </titleStmt>
            <publicationStmt>
                <p>Generated by <ref target="http://tei-publisher.com">TEI Publisher</ref>
                </p>
            </publicationStmt>
            <sourceDesc>
                <p>Generated by <ref target="http://tei-publisher.com">TEI Publisher</ref>
                </p>
            </sourceDesc>
        </fileDesc>
        <encodingDesc>
            <tagsDecl>
                <rendition source="jats.css"/>
            </tagsDecl>
        </encodingDesc>
    </teiHeader>
    <text>
        <body>
            <schemaSpec start="TEI teiCorpus" ident="jats" ns="">
                <elementSpec ident="body" mode="add">
                    <model behaviour="body"/>
                </elementSpec>
                <elementSpec ident="sec" mode="add">
                    <model behaviour="section"/>
                </elementSpec>
                <elementSpec ident="title" mode="add">
                    <model predicate="$parameters?mode='toc'" behaviour="inline"/>
                    <model predicate="parent::caption or parent::abstract" behaviour="heading">
            <param name="level" value="2"/>
            <outputRendition xml:space="preserve">
            margin-bottom: 0;
            </outputRendition>
        </model>
                    <model behaviour="heading">
            <param name="level" value="count(ancestor::sec) + 1"/>
        </model>
                </elementSpec>
                <elementSpec ident="p" mode="add">
                    <model predicate="ancestor::fn" behaviour="inline"/>
                    <model predicate="ancestor::td" behaviour="block"/>
                    <model behaviour="paragraph"/>
                </elementSpec>
                <elementSpec ident="list" mode="add">
                    <model behaviour="list">
            <param name="type" value="if (@list-type = 'order') then 'ordered' else ()"/>
        </model>
                </elementSpec>
                <elementSpec ident="list-item" mode="add">
                    <model behaviour="listItem"/>
                </elementSpec>
                <elementSpec ident="uri" mode="add">
                    <model behaviour="link">
            <param name="uri" value="@xlink:href"/>
        </model>
                </elementSpec>
                <elementSpec ident="bold" mode="add">
                    <model behaviour="inline">
            <outputRendition xml:space="preserve">
            font-weight: bold;
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="italic" mode="add">
                    <model behaviour="inline">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="table-wrap" mode="add">
                    <model behaviour="block"/>
                </elementSpec>
                <elementSpec ident="table" mode="add">
                    <model behaviour="table" cssClass="table">
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="tr">
                    <model behaviour="row"/>
                </elementSpec>
                <elementSpec ident="td">
                    <model behaviour="cell">
            <outputRendition xml:space="preserve">
            padding 0 4px;
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="th">
                    <model behaviour="cell" useSourceRendition="true">
            <outputRendition xml:space="preserve">
            
            
            
            
            
            
            
            
            
            
            
            
            
            font-weight: bold;
text-align: left;
padding: 0 4px;
            
            
            
            
            
            
            
            
            
            
            
            
            
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="article-meta" mode="add">
                    <model predicate="$parameters?display='browse'" behaviour="block">
            <param name="content" value="(title-group, contrib-group)"/>
        </model>
                    <modelSequence>
            <model behaviour="pass-through">
                <param name="content" value="title-group"/>
            </model>
            <model behaviour="block" cssClass="flex">
                <param name="content" value="(contrib-group, (pub-date[@iso-8601-date], pub-date)[1])"/>
                <outputRendition xml:space="preserve">
                margin-bottom: 2em;
                </outputRendition>
            </model>
            <model behaviour="block">
                <param name="content" value="abstract"/>
            </model>
        </modelSequence>
                </elementSpec>
                <elementSpec ident="title-group" mode="add">
                    <model predicate="$parameters?mode='breadcrumb'" behaviour="inline">
            <param name="content" value="article-title/text()"/>
        </model>
                    <modelSequence predicate="$parameters?display='browse'">
            <model behaviour="link">
                <param name="content" value="article-title"/>
                <param name="uri" value="$parameters?doc"/>
            </model>
            <model behaviour="block">
                <param name="content" value="subtitle"/>
            </model>
        </modelSequence>
                </elementSpec>
                <elementSpec ident="article-title" mode="add">
                    <model predicate="$parameters?mode='breadcrumb'" behaviour="inline"/>
                    <model predicate="$parameters?display='browse'" behaviour="heading">
            <param name="level" value="5"/>
        </model>
                    <model predicate="ancestor::article-meta" behaviour="heading" cssClass="title">
            <param name="level" value="1"/>
        </model>
                    <model predicate="ancestor::ref-list" behaviour="pass-through"/>
                </elementSpec>
                <elementSpec ident="subtitle" mode="add">
                    <model behaviour="heading">
            <param name="level" value="5"/>
        </model>
                </elementSpec>
            <elementSpec ident="caption" mode="add">
                    <model behaviour="body"/>
                </elementSpec>
                <elementSpec ident="disp-quote" mode="add">
                    <model behaviour="cit"/>
                </elementSpec>
                <elementSpec ident="fn" mode="add">
                    <model predicate="label" behaviour="note">
            <param name="n" value="label/string()"/>
            <param name="content" value="node() except label"/>
        </model>
                    <model behaviour="note"/>
                </elementSpec>
                <elementSpec ident="label" mode="add">
                    <model behaviour="block">
            <outputRendition xml:space="preserve">
            font-weight: bold;
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="xref" mode="add">
                    <model predicate="@ref-type='bibr'" behaviour="link">
            <param name="uri" value="'#' || @rid"/>
        </model>
                    <model predicate="@ref-type='fn'" behaviour="pass-through">
            <param name="content" value="let $rid := @rid return root($parameters?root)//fn[@id=$rid]"/>
        </model>
                </elementSpec>
                <elementSpec ident="contrib" mode="add">
                    <model predicate="preceding-sibling::contrib" behaviour="inline">
            <param name="content" value="name"/>
            <outputRendition xml:space="preserve" scope="after">
            content: ', ';
            </outputRendition>
        </model>
                    <model behaviour="inline">
            <param name="content" value="name"/>
        </model>
                </elementSpec>
                <elementSpec ident="contrib-group" mode="add">
                    <model predicate="$parameters?mode='breadcrumb'" behaviour="inline">
            <param name="content" value="contrib"/>
            <outputRendition xml:space="preserve" scope="before">
            content: ' - ';
            </outputRendition>
        </model>
                    <model behaviour="block">
            <param name="content" value="contrib"/>
        </model>
                </elementSpec>
            <elementSpec ident="code" mode="add">
                    <model behaviour="webcomponent">
            <param name="name" value="'pb-code-highlight'"/>
            <param name="language" value="(@language, 'xml')[1]"/>
            <param name="line-numbers" value="false()"/>
        </model>
                </elementSpec>
                <elementSpec ident="preformat" mode="add">
                    <model behaviour="pass-through">
            <pb:template xmlns="" xml:space="preserve"><pre>[[content]]</pre></pb:template>
        </model>
                </elementSpec>
                <elementSpec ident="monospace" mode="add">
                    <model behaviour="inline" cssClass="code"/>
                </elementSpec>
                <elementSpec ident="ext-link" mode="add">
                    <model behaviour="link">
            <param name="uri" value="@xlink:href"/>
        </model>
                </elementSpec>
                <elementSpec ident="figure" mode="add"/>
                <elementSpec ident="fig" mode="add">
                    <model predicate="@position='float'" behaviour="figure" cssClass="float-right">
            <param name="content" value="(graphic, caption)"/>
        </model>
                    <model behaviour="figure">
            <param name="content" value="(graphic, caption)"/>
        </model>
                </elementSpec>
                <elementSpec ident="graphic" mode="add">
                    <model behaviour="graphic">
            <param name="url" value="@xlink:href"/>
        </model>
                </elementSpec>
                <elementSpec ident="abstract" mode="add">
                    <model behaviour="block" cssClass="abstract"/>
                </elementSpec>
            <elementSpec ident="name" mode="add">
                    <model behaviour="inline">
            <param name="content" value="(given-names,surname)"/>
        </model>
                </elementSpec>
                <elementSpec ident="surname" mode="add">
                    <model predicate="../given-names" behaviour="inline">
            <param name="content" value="(' ', .)"/>
        </model>
                    <model behaviour="inline"/>
                </elementSpec>
                <elementSpec ident="pub-date" mode="add">
                    <model behaviour="block">
            <param name="content" value="if (matches(@iso-8601-date, &#34;^\d{4}-\d{2}$&#34;)) then   format-date(@iso-8601-date || &#34;-01&#34;, '[MNn] [Y]', $parameters?language, (), ()) else   format-date(@iso-8601-date, '[D]. [MNn] [Y]', $parameters?language, (), ())"/>
        </model>
                </elementSpec>
                <elementSpec ident="disp-formula" mode="add">
                    <model behaviour="pass-through">
            <pb:template xmlns="" xml:space="preserve">
                            <pb-formula menu="menu" display="display">
                                [[content]]
                            </pb-formula>
                        </pb:template>
        </model>
                </elementSpec>
                <elementSpec ident="mml:math">
                    <model behaviour="pass-through">
            <pb:template xmlns="" xml:space="preserve">
                            <math xmlns="http://www.w3.org/1998/Math/MathML" display="block">[[content]]</math>
                        </pb:template>
        </model>
                </elementSpec>
            <elementSpec ident="article" mode="add">
                    <model predicate="$parameters?mode='metadata'" behaviour="block">
            <param name="content" value="(front/journal-meta, front/article-meta)"/>
        </model>
                    <model predicate="$parameters?mode='breadcrumb'" behaviour="pass-through">
            <param name="content" value="front/article-meta/title-group"/>
        </model>
                    <model behaviour="document"/>
                </elementSpec>
            <elementSpec ident="back" mode="add">
                    <model behaviour="block">
            <param name="content" value="ref-list"/>
        </model>
                </elementSpec>
            <elementSpec ident="ref-list" mode="add">
                    <modelSequence>
            <model behaviour="pass-through">
                <param name="content" value="title"/>
            </model>
            <model behaviour="list" cssClass="references">
                <param name="type" value="'ordered'"/>
                <param name="content" value="ref"/>
            </model>
        </modelSequence>
                </elementSpec>
                <elementSpec ident="ref" mode="add">
                    <model behaviour="pass-through">
            <param name="title" value=".//article-title"/>
            <param name="source" value="if (exists(.//source)) then (&#34; In: &#34;,.//source, (&#34;, &#34;)) else ()"/>
            <param name="authors" value="let $names := for $name in  .//person-group[@person-group-type='author']/name return normalize-space($name) return string-join($names, ', ')"/>
            <param name="year" value=".//year"/>
            <param name="id" value="@id"/>
            <pb:template xmlns="" xml:space="preserve"><li id="[[id]]">[[authors]]: [[title]]. [[source]][[year]]</li></pb:template>
        </model>
                </elementSpec>
            <elementSpec ident="journal-meta" mode="add">
                    <model behaviour="block" cssClass="journal-meta">
            <param name="content" value="(.//journal-title, publisher, issn)"/>
        </model>
                </elementSpec>
                <elementSpec ident="journal-title" mode="add">
                    <model behaviour="inline" cssClass="journal-title"/>
                </elementSpec>
                <elementSpec ident="journal-title-group" mode="add">
                    <model behaviour="inline" cssClass="journal-title-group"/>
                </elementSpec>
                <elementSpec ident="publisher" mode="add">
                    <model behaviour="inline" cssClass="publisher"/>
                </elementSpec>
            <elementSpec ident="issn" mode="add">
                    <model behaviour="inline" cssClass="issn"/>
                </elementSpec>
            </schemaSpec>
        </body>
    </text>
</TEI>