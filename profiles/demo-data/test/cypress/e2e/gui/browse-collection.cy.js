// StandardJS, should-style assertions
// GUI tests for Browse Collection functionality
// Generated by jinks - DO NOT EDIT manually

describe('TEI-Publisher Browse Collection', () => {
  beforeEach(() => {
    
    // Intercept and stub problematic API calls that cause hanging
    cy.intercept('POST', '/api/login/**', { statusCode: 401, body: { error: 'Unauthorized' } }).as('loginStub')
    cy.intercept('GET', '/api/timeline/**', { statusCode: 200, body: { timeline: [] } }).as('timelineStub')
    
    cy.visit('/browse.html?collection=demo')
    
    // Wait for page to stabilize
    cy.get('body').should('be.visible')
  })

  describe('Collection Page Load', () => {
    it('loads the demo collection page successfully', () => {
      cy.url().should('include', '/browse.html')
      cy.url().should('include', 'collection=demo')
      cy.get('body').should('be.visible')
    })

    it('shows main content area', () => {
      cy.get('main').should('be.visible')
    })

    it('displays sidebar with facets', () => {
      cy.get('aside').should('be.visible')
    })
  })

  describe('Collection Content', () => {
    it('shows demo collection documents', () => {
      // Should show main content area
      cy.get('main').should('be.visible')
      cy.get('body').should('be.visible')
    })

    it('displays collection navigation', () => {
      // Check for collection-specific navigation
      cy.get('nav').should('be.visible')
    })
  })

  describe('Collection Search and Filtering', () => {
    it('displays search functionality', () => {
      // Check for search input
      cy.get('input[type="text"]').should('exist')
    })

    it('shows sorting options', () => {
      // Check for sorting dropdown
      cy.get('select').should('exist')
    })

    it('displays facet categories', () => {
      // Check for facet categories
      cy.get('aside').should('exist')
    })
  })

  describe('Collection Responsive Design', () => {
    it('adapts to mobile viewport', () => {
      cy.viewport(375, 667) // iPhone SE
      
      cy.get('nav').should('be.visible')
      cy.get('main').should('be.visible')
      // On mobile, aside elements are hidden by design (inside .mobile.menubar.hidden)
      // Check that mobile navigation exists instead
      cy.get('.mobile.menubar').should('exist')
    })

    it('adapts to tablet viewport', () => {
      cy.viewport(768, 1024) // iPad
      
      cy.get('nav').should('be.visible')
      cy.get('main').should('be.visible')
      // On tablet, check that the page structure is responsive
      // The aside elements may still be hidden depending on CSS breakpoints
      cy.get('body').should('be.visible')
      cy.get('.before-top').should('exist') // Navigation elements should exist
    })
  })

  describe('Collection Error Handling', () => {
    it('handles collection errors gracefully', () => {
      // Should handle any collection-specific errors
      cy.get('body').should('be.visible')
    })
  })

  describe('Collection Accessibility', () => {
    it('has proper heading structure', () => {
      cy.get('h1, h2, h3, h4, h5, h6').should('have.length.at.least', 1)
    })

    it('has accessible navigation', () => {
      cy.get('nav').should('be.visible')
      cy.get('nav a').should('have.length.at.least', 1)
    })
  })
})

