<tei:TEI xmlns:pb="http://teipublisher.com/1.0" xmlns:tei="http://www.tei-c.org/ns/1.0" xml:lang="en">
    <teiHeader xmlns="http://www.tei-c.org/ns/1.0">
        <fileDesc>
            <titleStmt>
                <title>Serafin Letters






















                 
                   <desc>15th c. manuscript correspondence with parallel translation</desc>
                </title>
            </titleStmt>
            <publicationStmt>
                <publisher>eXistSolutions GmbH</publisher>
                <availability>
                    <licence target="https://www.gnu.org/licenses/gpl-3.0.en.html">Distributed under GNU General Public License</licence>
                    <p>Copyright 2017 <ref target="http://existsolutions.com">eXistSolutions GmbH</ref>
                    </p>
                    <p>This program is free software: you can redistribute it and/or modify
                        it under the terms of the GNU General Public License as published by
                        the Free Software Foundation, either version 3 of the License, or
                        (at your option) any later version.</p>
                    <p>This program is distributed in the hope that it will be useful,
                        but WITHOUT ANY WARRANTY; without even the implied warranty of
                        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                        GNU General Public License for more details.</p>
                </availability>
            </publicationStmt>
            <sourceDesc>
                <p>Generated by <ref target="http://tei-publisher.com">TEI Publisher</ref>
                </p>
                <p>born digital</p>
            </sourceDesc>
        </fileDesc>
        <encodingDesc>
            <tagsDecl>
                <pb:behaviour ident="glossary" output="latex">
                    <pb:param name="id" value="@xml:id"/>
                    <pb:param name="name"/>
                    <pb:param name="note"/>
                    <pb:template xmlns="" xml:space="preserve">\newglossaryentry{[[id]]} {
                        name=[[name]],
                        description={[[note]]}
                    }</pb:template>
                </pb:behaviour>
                <rendition source="serafin.css"/>
            </tagsDecl>
        </encodingDesc>
        <revisionDesc>
            <change when="2018-08-31+02:00">Initial version</change>
        </revisionDesc>
    </teiHeader>
    <text xmlns="http://www.tei-c.org/ns/1.0">
        <body>
            <schemaSpec start="TEI teiCorpus" ident="serafin" source="teipublisher.odd">
                <elementSpec ident="TEI" mode="change"/>
                <elementSpec ident="p" mode="change">
                    <model output="latex" behaviour="paragraph"/>
                    <model behaviour="paragraph" useSourceRendition="true">
            <outputRendition xml:space="preserve">
            text-align: justify;
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="lb" mode="change">
                    <model behaviour="omit" useSourceRendition="true"/>
                </elementSpec>

                <elementSpec ident="note" mode="change">
                    <model predicate="parent::person or parent::place" behaviour="inline">
            <outputRendition xml:space="preserve" scope="selected">
            content: ': ';
            </outputRendition>
        </model>
                    <model predicate="@target" behaviour="inline"/>
                    <model behaviour="note"/>
                </elementSpec>
                <elementSpec ident="orgName" mode="add">
                    <model output="print" behaviour="inline">
            <outputRendition xml:space="preserve">
            color: #2e7d32;
            </outputRendition>
        </model>
                    <model predicate="parent::org" behaviour="inline">
            <outputRendition xml:space="preserve" scope="after">
            content: ': ';
            </outputRendition>
            <outputRendition xml:space="preserve">
            font-weight: bold;
            </outputRendition>
        </model>
                    <model behaviour="alternate">
            <param name="default" value="."/>
            <param name="alternate" value="id(@key, root(.))"/>
            <outputRendition xml:space="preserve">
            color: #2e7d32;
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="seg" mode="change">
                    <model output="latex" behaviour="inline">
            <pb:template xmlns="" xml:space="preserve">\pstart [[content]] \pend</pb:template>
        </model>
                    <model predicate="@corresp" behaviour="webcomponent" useSourceRendition="true">
            <param name="name" value="'pb-highlight'"/>
            <param name="key" value="replace(@corresp, &#34;^#\w\.(.*)$&#34;, &#34;$1&#34;)"/>
            <param name="highlight-self" value="true()"/>
        </model>
                    <model behaviour="webcomponent" useSourceRendition="true">
            <param name="name" value="'pb-highlight'"/>
            <param name="key" value="replace(@xml:id, &#34;^\w\.(.*)$&#34;, &#34;$1&#34;)"/>
            <param name="highlight-self" value="true()"/>
        </model>
                </elementSpec>
                <elementSpec ident="correspAction" mode="add">
                    <model predicate="@type='sent'" behaviour="inline">
            <param name="content" value="(placeName, ', ', date)"/>
            <outputRendition xml:space="preserve" scope="before">
            content: ' â€” ';
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="date" mode="change">
                    <model predicate="$parameters?header='short' or $parameters?mode='breadcrumb'" behaviour="inline"/>
                    <model output="print" predicate="text()" behaviour="inline"/>
                    <model predicate="@when and (not(text()) or text() = '')" behaviour="pass-through">
            <param name="content" value="text { @when }"/>
        </model>
                    <model output="web" predicate="@when" behaviour="alternate">
            <param name="default" value="."/>
            <param name="alternate" value="try { format-date(xs:date(@when), '[D1o] [MNn] [Y]', (session:get-attribute('lang'), 'en')[1], (), ()) } catch * { @when/string() }"/>
        </model>
                    <model predicate="text()" behaviour="inline"/>
                </elementSpec>

                <elementSpec ident="birth" mode="add">
                    <model behaviour="inline" cssClass="birth"/>
                </elementSpec>
                <elementSpec ident="death" mode="add">
                    <model behaviour="inline" cssClass="death"/>
                </elementSpec>
                <elementSpec ident="region" mode="add">
                    <model behaviour="inline" cssClass="region"/>
                </elementSpec>
            <elementSpec ident="country" mode="add">
                    <model behaviour="inline" cssClass="country"/>
                </elementSpec>
                <elementSpec ident="ptr" mode="change">
                    <model predicate="parent::notatedMusic" behaviour="pass-through">
            <desc>Load and display external MEI</desc>
            <param name="url" value="@target"/>
            <pb:template xmlns="" xml:space="preserve"><pb-mei url="[[url]]" player="player">
                              <pb-option name="appXPath" on="./rdg[contains(@label, 'original')]" off="">Original Clefs</pb-option>
                              </pb-mei></pb:template>
        </model>
                    <model predicate="parent::place" behaviour="listItem">
            <param name="target" value="@target"/>
            <param name="type" value="@type"/>
            <pb:template xmlns="" xml:space="preserve"><a href="[[target]]">[[type]]</a></pb:template>
        </model>
                </elementSpec>
                <elementSpec ident="pb" mode="change">
                    <model behaviour="webcomponent" cssClass="facs">
            <desc>Use the pb-tify component, no need for explicit link to the image, this is taken care of by the iiif api</desc>
            <param name="name" value="'pb-facs-link'"/>
            <param name="content" value="@n"/>
            <param name="emit" value="'transcription'"/>
            <param name="order" value="count($get(.)/preceding::pb) + 1"/>
            <param name="emit-on-load" value="'emit-on-load'"/>
            <param name="facs" value="'api/iiif/' || substring-after(document-uri(root($parameters?root)), $global:data-root || '/')"/>
        </model>
                </elementSpec>
            </schemaSpec>
        </body>
    </text>
</tei:TEI>